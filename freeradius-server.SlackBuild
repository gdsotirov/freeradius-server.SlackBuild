#!/bin/sh
# Slackware build script for FreeRADIUS
# Copyright (C) 2016-2024 Georgi D. Sotirov <gdsotirov@dir.bg>
# Based on the original build script for the client by Patick Volkerding
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=freeradius-server
VERSION=3.2.6
ARCH=${ARCH:-i586}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir --parents $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir --parents $PKG

# Extract and fix source
cd $TMP
tar --extract --verbose --file=$CWD/${NAME}-${VERSION}.tar.bz2 || exit 3
cd $SRC
fix_source

# Configure
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLCKCFLAGS" \
./configure --build="${ARCH}-slackware-linux" \
            --host="${ARCH}-slackware-linux" \
            --enable-shared=yes \
            --enable-static=no \
            --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --mandir=/usr/man \
            --with-docdir=/usr/doc/${NAME}-${VERSION} \
            --with-ascend-binary \
            --with-threads \
            --with-tcp \
            --with-vmps \
            --with-dhcp \
            --with-shared-libs \
            --with-udpfromto \
            --with-openssl \
            --with-pcre \
            --with-regex || exit 4

# Build & install
# Use LOCAL_CERT_PRODUCTS ?
make ECHO=true Q='' --jobs || exit 5
make ECHO=true Q='' R=$PKG install || exit 6

# Put rc.radiusd in the right place
install --mode 755 --directory $PKG/etc/rc.d
install --mode 644 --preserve-timestamps \
        $SRC/scripts/rc.radiusd $PKG/etc/rc.d/rc.radiusd.new
rm --force $PKG/usr/sbin/rc.radiusd

# Rename config files
(cd $PKG/etc/raddb;
 mv certs/ca.cnf            certs/ca.cnf.new;
 mv certs/client.cnf        certs/client.cnf.new;
 mv certs/inner-server.cnf  certs/inner-server.cnf.new;
 mv certs/server.cnf        certs/server.cnf.new;
 mv clients.conf            clients.conf.new;
 mv experimental.conf       experimental.conf.new )

(cd $PKG/etc/raddb/mods-config/sql;
 mv counter/mysql/dailycounter.conf               counter/mysql/dailycounter.conf.new;
 mv counter/mysql/expire_on_login.conf            counter/mysql/expire_on_login.conf.new;
 mv counter/mysql/monthlycounter.conf             counter/mysql/monthlycounter.conf.new;
 mv counter/mysql/noresetcounter.conf             counter/mysql/noresetcounter.conf.new;
 mv counter/mysql/weeklycounter.conf              counter/mysql/weeklycounter.conf.new;
 mv counter/postgresql/dailycounter.conf          counter/postgresql/dailycounter.conf.new;
 mv counter/postgresql/expire_on_login.conf       counter/postgresql/expire_on_login.conf.new;
 mv counter/postgresql/monthlycounter.conf        counter/postgresql/monthlycounter.conf.new;
 mv counter/postgresql/noresetcounter.conf        counter/postgresql/noresetcounter.conf.new;
 mv counter/postgresql/weeklycounter.conf         counter/postgresql/weeklycounter.conf.new;
 mv counter/sqlite/dailycounter.conf              counter/sqlite/dailycounter.conf.new;
 mv counter/sqlite/expire_on_login.conf           counter/sqlite/expire_on_login.conf.new;
 mv counter/sqlite/monthlycounter.conf            counter/sqlite/monthlycounter.conf.new;
 mv counter/sqlite/noresetcounter.conf            counter/sqlite/noresetcounter.conf.new;
 mv counter/sqlite/weeklycounter.conf             counter/sqlite/weeklycounter.conf.new;
 mv cui/mysql/queries.conf                        cui/mysql/queries.conf.new;
 mv cui/postgresql/queries.conf                   cui/postgresql/queries.conf.new;
 mv cui/sqlite/queries.conf                       cui/sqlite/queries.conf.new;
 mv dhcp/mssql/queries.conf                       dhcp/mssql/queries.conf.new;
 mv dhcp/mysql/queries.conf                       dhcp/mysql/queries.conf.new;
 mv dhcp/oracle/queries.conf                      dhcp/oracle/queries.conf.new;
 mv dhcp/postgresql/queries.conf                  dhcp/postgresql/queries.conf.new;
 mv dhcp/sqlite/queries.conf                      dhcp/sqlite/queries.conf.new;
 mv ippool-dhcp/mssql/queries.conf                ippool-dhcp/mssql/queries.conf.new;
 mv ippool-dhcp/mysql/queries.conf                ippool-dhcp/mysql/queries.conf.new;
 mv ippool-dhcp/oracle/queries.conf               ippool-dhcp/oracle/queries.conf.new;
 mv ippool-dhcp/postgresql/queries.conf           ippool-dhcp/postgresql/queries.conf.new;
 mv ippool-dhcp/sqlite/queries.conf               ippool-dhcp/sqlite/queries.conf.new;
 mv ippool/mongo/queries.conf                     ippool/mongo/queries.conf.new;
 mv ippool/mssql/queries.conf                     ippool/mssql/queries.conf.new;
 mv ippool/mysql/queries.conf                     ippool/mysql/queries.conf.new;
 mv ippool/oracle/queries.conf                    ippool/oracle/queries.conf.new;
 mv ippool/postgresql/queries.conf                ippool/postgresql/queries.conf.new;
 mv ippool/sqlite/queries.conf                    ippool/sqlite/queries.conf.new;
 mv main/mongo/queries.conf                       main/mongo/queries.conf.new;
 mv main/mssql/queries.conf                       main/mssql/queries.conf.new;
 mv main/mysql/extras/wimax/queries.conf          main/mysql/extras/wimax/queries.conf.new;
 mv main/mysql/queries.conf                       main/mysql/queries.conf.new;
 mv main/oracle/queries.conf                      main/oracle/queries.conf.new;
 mv main/postgresql/extras/voip-postpaid.conf     main/postgresql/extras/voip-postpaid.conf.new;
 mv main/postgresql/queries.conf                  main/postgresql/queries.conf.new;
 mv moonshot-targeted-ids/mysql/queries.conf      moonshot-targeted-ids/mysql/queries.conf.new;
 mv moonshot-targeted-ids/postgresql/queries.conf moonshot-targeted-ids/postgresql/queries.conf.new;
 mv moonshot-targeted-ids/sqlite/queries.conf     moonshot-targeted-ids/sqlite/queries.conf.new;
 mv main/sqlite/queries.conf                      main/sqlite/queries.conf.new )

(cd $PKG/etc/raddb/mods-config/unbound;
 mv default.conf   default.conf.new )

(cd $PKG/etc/raddb;
 mv proxy.conf     proxy.conf.new;
 mv radiusd.conf   radiusd.conf.new;
 mv templates.conf templates.conf.new;
 mv trigger.conf   trigger.conf.new )

# Prepare
bin_perms $PKG
sbin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
gzip_man $PKG
create_docs $PKG ${NAME}-${VERSION}

# Rename LICENSE to COPYING and provide symbolic link to it
(cd $PKG/usr/doc/${NAME}-${VERSION};
 mv LICENSE COPYING;
 ln --symbolic COPYING LICENSE )

install --mode 755 --directory $PKG/install
install --mode 644 --preserve-timestamps \
        $CWD/doinst.sh       $PKG/install/doinst.sh
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc      $PKG/install/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required  $PKG/install/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/slack-suggests  $PKG/install/slack-suggests

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
install --mode 755 --directory $SBDIR
install --mode 644 --preserve-timestamps \
        $CWD/doinst.sh           $SBDIR/doinst.sh
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc          $SBDIR/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required      $SBDIR/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/slack-suggests      $SBDIR/slack-suggests
install --mode 644 --preserve-timestamps \
        $CWD/${NAME}.SlackBuild  $SBDIR/${NAME}.SlackBuild

# Create package
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg --chown n --linkadd y $PKG_DIR/${PKGNAME}.txz
( cd $PKG_DIR
  md5sum ${PKGNAME}.txz > ${PKGNAME}.txz.md5
  cat $PKG/install/slack-desc > $PKG_DIR/${PKGNAME}.txt
)

# Clean up (optionally)
if [ "$1" == "--cleanup" ]; then
   rm --force --recursive $TMP/${NAME}-${VERSION}
   rm --force --recursive $TMP/package-${NAME}
fi

